import os

# REDIS
# Queue name
REDIS_QUEUE = "service_queue"
# Port
REDIS_PORT = 6379
# DB Id
REDIS_DB_ID = 0
# Host IP
REDIS_IP = os.getenv("REDIS_IP", "redis")
# Sleep parameters which manages the
# interval between requests to our redis queue
SERVER_SLEEP = 0.05

columns_drop = ["ID_CLIENT", "CLERK_TYPE", "QUANT_ADDITIONAL_CARDS", "EDUCATION_LEVEL", "CITY_OF_BIRTH", "FLAG_MOBILE_PHONE", "QUANT_SPECIAL_BANKING_ACCOUNTS", "PROFESSIONAL_STATE", "PROFESSIONAL_CITY", "PROFESSIONAL_BOROUGH", "PROFESSIONAL_PHONE_AREA_CODE", "MATE_PROFESSION_CODE", "MATE_EDUCATION_LEVEL", "FLAG_HOME_ADDRESS_DOCUMENT", "FLAG_RG", "FLAG_CPF", "FLAG_INCOME_PROOF", "FLAG_ACSP_RECORD", "CITY_OF_BIRTH", "APPLICATION_SUBMISSION_TYPE", "RESIDENCIAL_BOROUGH", "RESIDENCIAL_PHONE_AREA_CODE", "MONTHS_IN_THE_JOB", "PROFESSIONAL_ZIP_3", "POSTAL_ADDRESS_TYPE", "RESIDENCIAL_CITY", "PERSONAL_MONTHLY_INCOME", "OTHER_INCOMES", "PROFESSION_CODE"]

numerical_features = ["MONTHS_IN_RESIDENCE","ALL_INCOMES","PERSONAL_ASSETS_VALUE","QUANT_CARS","AGE"]

categorical_features = ["SEX","STATE_OF_BIRTH","RESIDENCIAL_STATE","FLAG_RESIDENCIAL_PHONE","COMPANY",
"FLAG_PROFESSIONAL_PHONE","RESIDENCIAL_ZIP_3"]

#X_train = pd.read_pickle("X_train")
#numeric_categ_features = list(X_train.columns.drop(numerical_features+categorical_features+columns_drop))
numeric_categ_features = ['PAYMENT_DAY', 'MARITAL_STATUS', 'QUANT_DEPENDANTS', 'NACIONALITY', 'RESIDENCE_TYPE',
 'FLAG_EMAIL', 'FLAG_VISA', 'FLAG_MASTERCARD', 'FLAG_DINERS', 'FLAG_AMERICAN_EXPRESS', 'FLAG_OTHER_CARDS',
 'QUANT_BANKING_ACCOUNTS', 'OCCUPATION_TYPE', 'PRODUCT']

#list_columns = X_train.columns
list_columns = ['ID_CLIENT', 'CLERK_TYPE', 'PAYMENT_DAY', 'APPLICATION_SUBMISSION_TYPE', 'QUANT_ADDITIONAL_CARDS',
 'POSTAL_ADDRESS_TYPE', 'SEX', 'MARITAL_STATUS', 'QUANT_DEPENDANTS', 'EDUCATION_LEVEL', 'STATE_OF_BIRTH',
 'CITY_OF_BIRTH', 'NACIONALITY', 'RESIDENCIAL_STATE', 'RESIDENCIAL_CITY', 'RESIDENCIAL_BOROUGH', 'FLAG_RESIDENCIAL_PHONE',
 'RESIDENCIAL_PHONE_AREA_CODE', 'RESIDENCE_TYPE', 'MONTHS_IN_RESIDENCE', 'FLAG_MOBILE_PHONE', 'FLAG_EMAIL',
 'PERSONAL_MONTHLY_INCOME', 'OTHER_INCOMES', 'FLAG_VISA', 'FLAG_MASTERCARD', 'FLAG_DINERS', 'FLAG_AMERICAN_EXPRESS',
 'FLAG_OTHER_CARDS', 'QUANT_BANKING_ACCOUNTS', 'QUANT_SPECIAL_BANKING_ACCOUNTS', 'PERSONAL_ASSETS_VALUE',
 'QUANT_CARS', 'COMPANY', 'PROFESSIONAL_STATE', 'PROFESSIONAL_CITY', 'PROFESSIONAL_BOROUGH', 'FLAG_PROFESSIONAL_PHONE',
 'PROFESSIONAL_PHONE_AREA_CODE', 'MONTHS_IN_THE_JOB', 'PROFESSION_CODE', 'OCCUPATION_TYPE', 'MATE_PROFESSION_CODE',
 'MATE_EDUCATION_LEVEL', 'FLAG_HOME_ADDRESS_DOCUMENT', 'FLAG_RG', 'FLAG_CPF', 'FLAG_INCOME_PROOF', 'PRODUCT',
 'FLAG_ACSP_RECORD', 'AGE', 'RESIDENCIAL_ZIP_3', 'PROFESSIONAL_ZIP_3', 'TARGET_LABEL_BAD=1'] 

outlier_columns = ["MONTHS_IN_RESIDENCE", "ALL_INCOMES", "PERSONAL_ASSETS_VALUE"]